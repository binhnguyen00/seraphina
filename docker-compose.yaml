services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: dockerfile
    container_name: seraphina
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/logs
    environment:
      - JAVA_OPTS=-Xms256m -Xmx512m
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${DB_PORT}/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy

  zalo:
    build:
      context: ./addons/zalo
      dockerfile: dockerfile
    container_name: zalo_bot
    ports:
      - "${MICROSERVICE_ZALO_PORT}:${MICROSERVICE_ZALO_PORT}"
    volumes:
      - ./logs:/logs
    environment:
      - MICROSERVICE_ZALO_PORT=${MICROSERVICE_ZALO_PORT}
      - MICROSERVICE_ZALO_BOT_TOKEN=${MICROSERVICE_ZALO_BOT_TOKEN}
      - MICROSERVICE_ZALO_WEBHOOK_URL=${MICROSERVICE_ZALO_WEBHOOK_URL}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${MICROSERVICE_ZALO_PORT}/health || exit 1"]
      interval: 5s
      retries: 5

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok_tunnel
    command: http --url=peaceful-partly-alpaca.ngrok-free.app zalo:${MICROSERVICE_ZALO_PORT}
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - MICROSERVICE_ZALO_PORT=${MICROSERVICE_ZALO_PORT}
    depends_on:
      - zalo

volumes:
  postgres_data:
  logs: